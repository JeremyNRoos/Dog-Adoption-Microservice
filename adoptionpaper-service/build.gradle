plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
}


jacoco {
	toolVersion = "0.8.11"
}

group = 'com.roos.adoptioncenter.adoptionpaper-service'
version = '1.0.0-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

ext {
	mapstructVersion = '1.5.5.Final'
	lombokVersion = '1.18.30'
	lombokMapstructBindingVersion = '0.2.0'
}

dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo.spring3x:4.12.3'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
//	runtimeOnly 'com.h2database:h2'
	compileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}", "org.projectlombok:lombok:${lombokVersion}", "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
//	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
}

jacocoTestReport {
	dependsOn test
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
//"com/movielister/**/MovieDetailsServiceApplication.class",
// "**/*MapperImpl.class"
			])
		}))
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.00
			}
		}
	}
}


test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

test {
	ignoreFailures = true
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}}